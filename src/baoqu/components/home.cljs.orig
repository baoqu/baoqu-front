(ns baoqu.components.home
  (:require [rum.core :as rum]
            [baoqu.services.event :as event]
            [baoqu.data :as d]
            [baoqu.mixins :as mixins]
            [clojure.string :as s]))

(rum/defc header < rum/reactive
  []
<<<<<<< HEAD
  [:div#mainHeader
   [:h1.logo "Baoqu"]
   [:div.event-name (get-in @d/state [:event :name])]])
=======
  [:div.header-wrapper
    [:div#mainHeader
      [:h1.logo "Baoqu"]
      [:div.event-name "¿Qué tipo de muerte dolorosa queremos para los ciclistas de La Guindalera?"]
    ]
    [:ul.mobile-menu
      [:li.active
        [:i {:class "icon-header fa fa-lg fa-map"}]
        [:span.title "Map"]
      ]
      [:li
        [:i {:class "icon-header fa fa-lg fa-lightbulb-o"}]
        [:span.title "36 ideas"]
      ]
      [:li
        [:i {:class "icon-header fa fa-lg fa-comments"}]
        [:span.title "36 deliberación"]
      ]
    ]
  ])
>>>>>>> responsive menu

(rum/defc footer < rum/static
  []
  ;; [:div#mainFooter "user movidas"]
  [:div#user
    [:div.avatar
      [:div.thumb "A"]
    ]
  ]
)

(rum/defc ideas < rum/static
  []
  (let [circle-id (:circle @d/state)
        circles (:circles @d/state)
        circle (first (filter #(= circle-id (:id %)) circles))]
    [:div.mod-ideas
     [:div.mod-header
      [:i {:class "icon-header fa fa-lg fa-lightbulb-o"}]
      [:div.title (str (:num-ideas circle) " ideas")]
      [:span.toggle
       [:i {:class "fa fa-lg fa-chevron-right"}]]]
     [:div.mod-body
      [:ul
       (for [idea (:ideas @d/state)]
         (let [circle-size (get-in @d/state [:event :circle-size])
               votes (:votes idea)
               approval-percentage (* 100 (/ votes circle-size))]
           [:li.mod-idea
            [:div.idea (:body idea)]
            [:div.voting-block
             [:div.votes
              [:div.votes-count (str votes "/" circle-size " apoyos para promocionar el círculo")]
              [:div.progress-bar
               [:div.inner {:style {:width (str approval-percentage "%")}}]
               ]
              ]
             [:div.btn.btn-gray "Apoyar"]
             ]
            ]))
       ]
      ]
     [:div.mod-add-box
      [:input {:placeholder "# Añade una nueva idea"}]
      [:span.button
       [:i {:class "fa fa-lg fa-plus"}]]]]))

(rum/defc comments < rum/static
  []
  (let [circle-id (:circle @d/state)
        circles (:circles @d/state)
        circle (first (filter #(= circle-id (:id %)) circles))]
        [:div.mod-comments
         [:div.mod-header
          [:i {:class "icon-header fa fa-lg fa-comments"}]
          [:div.title (str (:num-comments circle) " deliberación")]
          [:span.toggle
           [:i {:class "fa fa-lg fa-chevron-right"}]]]

         [:div.mod-body
          [:ul
           (for [comment (:comments @d/state)]
             (let [participants (:participants @d/state)
                   author-id (:author comment)
                   author (first (filter #(= (:id %) author-id) participants))
                   initial (s/upper-case (first (:name author)))]
               [:li.mod-comment
                [:div.avatar
                 [:div.thumb initial]
                 ]
                [:div.content
                 [:div.username (:name author)]
                 [:div.comment (:body comment)]
                 ]
                ])
             )
           ]
          ]

         [:div.mod-add-box
          [:input {:placeholder "Comenta"}]
          [:span.button
           [:i {:class "fa fa-lg fa-plus"}]]]]))

(rum/defc circle < rum/static
  []
  (let [circle-id (:circle @d/state)
        circles (:circles @d/state)
        circle (first (filter #(= circle-id (:id %)) circles))]
    [:div.circle-wrapper
     [:div.circle-header
      [:div.circle-header-title (:name circle)
       [:span.tag (str "Nivel " (:level circle))]
       ]
      [:span.circle-header-exit "Salir de este círculo"]]
     [:div.circle-content
      (ideas)
      (comments)]]))

(rum/defc the-map < rum/reactive
  []
  [:div.map
    [:div.circle.c-lv1.not-full
      [:div.circle.agree]
      [:div.circle]
      [:div.circle.not-full]

      ;; context info
      [:div.context-info
        [:div.circle-title "Círculo Carmander"
          [:span.tag "Nivel 1"]
        ]
        [:div.mod-idea
          [:div.intro "Idea más apoyada"]
          [:div.idea "Montar un bar"]
          [:div.voting-block
            [:div.votes
              [:div.votes-count "2/3 apoyos para promocionar"]
              [:div.progress-bar
                [:div.inner {:style {:width "66%"}}]
              ]
            ]
          ]
        ]
        [:div.mod-meta
          [:div.item
          [:i {:class "icon-header fa fa-lightbulb-o"}]
            [:span "33"]
          ]
          [:div.item
          [:i {:class "icon-header fa fa-comments"}]
            [:span "33"]
          ]
          [:div.item
          [:i {:class "icon-header fa fa-lightbulb-o"}]
            [:span "33"]
          ]
        ]
      ]
      ;; end: context info
    ]
    [:div.circle.c-lv1.my-circle
      [:div.circle.agree]
      [:div.circle.agree.my-circle]
      [:div.circle]
    ]
    [:div.circle.c-lv2
      [:div.circle
        [:div.circle.agree]
        [:div.circle]
        [:div.circle]
      ]
      [:div.circle
        [:div.circle.agree]
        [:div.circle]
        [:div.circle.agree]
      ]
      [:div.circle
        [:div.circle.agree]
        [:div.circle.agree]
        [:div.circle.agree]
      ]
    ]
    [:div.circle.c-lv1
    [:div.circle.agree]
    [:div.circle.agree]
    [:div.circle]
    ]
    [:div.circle.c-lv3
      [:div.circle]
      [:div.circle]
      [:div.circle
        [:div.circle]
        [:div.circle]
        [:div.circle
          [:div.circle]
          [:div.circle]
          [:div.circle
            [:div.circle]
            [:div.circle]
            [:div.circle]
          ]
        ]
      ]
    ]
  ])

(rum/defc container < rum/reactive
  []
  [:div.container
   (the-map)
   (circle)])

(rum/defc main < rum/reactive mixins/secured-mixin mixins/connect-ws-mixin
  "The main component for the home screen"
  []
  ;; list-events

  ;; select-event

  ;; join-event
  (event/join-event)

  [:div.page
   (header)
   (container)
   (footer)])
